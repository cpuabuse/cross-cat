stages:
  - stage: test
    jobs:
      - job: node
        strategy:
          matrix:
            linux_10:
              os: ubuntu-latest
              node_version: 10.x
            linux_11:
              os: ubuntu-latest
              node_version: 11.x
            linux_12:
              os: ubuntu-latest
              node_version: 12.x
            linux_13:
              os: ubuntu-latest
              node_version: 13.x
            macos_10:
              os: macOS-latest
              node_version: 10.x
            macos_11:
              os: macOS-latest
              node_version: 11.x
            macos_12:
              os: macOS-latest
              node_version: 12.x
            macos_13:
              os: macOS-latest
              node_version: 13.x
            windows_10:
              os: windows-latest
              node_version: 10.x
            windows_11:
              os: windows-latest
              node_version: 11.x
            windows_12:
              os: windows-latest
              node_version: 12.x
            windows_13:
              os: windows-latest
              node_version: 13.x
        pool:
          vmImage: $(os)
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: $(node_version)
          - pwsh: script/pipeline/Test-Node.ps1
  - stage: deploy
    dependsOn: test
    condition: and(succeeded(), in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/dev'))
    jobs:
      - deployment: coverage_codacy
        environment: coverage
        pool:
          vmImage: ubuntu-latest
        strategy:
          runOnce:
            deploy:
              steps:
              - task: NodeTool@0
                inputs:
                  versionSpec: 13.x
              - checkout: self
              - pwsh: script/pipeline/Deploy-Codacy.ps1
                env:
                  CODACY_PROJECT_TOKEN: $(CodacyProjectToken)
      - deployment: coverage_azure_pipelines
        environment: coverage
        pool:
          vmImage: ubuntu-latest
        strategy:
          runOnce:
            deploy:
              steps:
                - task: NodeTool@0
                  inputs:
                    versionSpec: 13.x
                - checkout: self
                - pwsh: script/pipeline/Build-Cobertura.ps1
                - task: PublishCodeCoverageResults@1
                  inputs: 
                    codeCoverageTool: Cobertura
                    summaryFileLocation: 'coverage/cobertura-coverage.xml'
      - deployment: test_azure_pipelines
        environment: test
        pool:
          vmImage: ubuntu-latest
        strategy:
          runOnce:
            deploy:
              steps:
                - task: NodeTool@0
                  inputs:
                    versionSpec: 13.x
                - checkout: self
                - pwsh: script/pipeline/Build-JUnit.ps1
                - task: PublishTestResults@2
                  inputs:
                    testRunner: JUnit
                    testResultsFiles: 'test-results.xml'
  - stage: publish
    dependsOn: test
    jobs:
      - deployment: docs_github
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        environment: docs
        pool:
          vmImage: ubuntu-latest
        strategy:
          runOnce:
            deploy:
              steps:
              - task: NodeTool@0
                inputs:
                  versionSpec: 13.x
              - checkout: self
              - pwsh: script/pipeline/Deploy-Docs.ps1
                env:
                  GITHUB_PAT: $(GithubPat)
      - deployment: npm_next
        environment: npm
        pool:
          vmImage: ubuntu-latest
        strategy:
          runOnce:
            deploy:
              steps:
              - task: NodeTool@0
                inputs:
                  versionSpec: 13.x
              - checkout: self
                clean: true
              - pwsh: script/pipeline/Deploy-NPMNext.ps1
                env:
                  GITHUB_PAT: $(GithubPat)
                  NPM_TOKEN: $(NpmToken)